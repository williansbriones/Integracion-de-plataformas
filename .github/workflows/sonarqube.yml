name: SonarQube analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarQube to decorate PRs with analysis results

jobs:
  Analysis:
    runs-on: ubuntu-latest

    steps:
      
      - name: Analyze with SonarQube
        # You can pin the exact commit or the version.
        # uses: SonarSource/sonarqube-scan-action@v1.1.0
        uses: SonarSource/sonarqube-scan-action@7295e71c9583053f5bf40e9d4068a0c974603ec8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on SonarQube, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}  
        
        with:
          run: ./gradlew build sonar --info
          args:
          
            -Dsonar.projectKey=motopapis
            -Dsonar.sources=src/main/java
            -Dsonar.tests=src/test/java
            -Dsonar.java.binaries=build/classes/java/main
            -Dsonar.sonar.java.test.binaries=build/test-results/test
            -Dsonar.sonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco.xml
            -Dsonar.language=java 
            # optional, default is .
            # Comma-separated paths to directories containing main source files.
            # When you need the analysis to take place in a directory other than the one from which it was launched
            # Comma-separated paths to directories containing test source files.
            # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
            # # optional, default is false
              
